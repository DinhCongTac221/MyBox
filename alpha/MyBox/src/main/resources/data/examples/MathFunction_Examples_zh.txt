##MyBox#
MyBoxTreeRoot;;;
数学函数

##MyBox#
数学函数
示例

##MyBox#
示例
常数

##MyBox#
示例 > 常数
圆周率
Math.PI

##MyBox#
示例 > 常数
欧拉数
Math.E

##MyBox#
示例 > 常数
2的自然对数
Math.LN2

##MyBox#
示例 > 常数
10 的自然对数
Math.LN10

##MyBox#
示例 > 常数
e的以2为底的对数
Math.LOG2E

##MyBox#
示例 > 常数
e的以10为底的对数
Math.LOG10E

##MyBox#
示例 > 常数
2的平方根
Math.SQRT2

##MyBox#
示例 > 常数
0.5的平方根
Math.SQRT1_2

##MyBox#
示例 > 常数
随机数
Math.random()

##MyBox#
示例 > 常数
数值类型的最大正有限值
Number.MAX_VALUE

##MyBox#
示例 > 常数
数值类型的最小正有限值
Number.MIN_VALUE

##MyBox#
示例 > 常数
正无穷大
Number.POSITIVE_INFINITY

##MyBox#
示例 > 常数
负无穷大
Number.NEGATIVE_INFINITY

##MyBox#
示例 > 常数
非数字
Number.NaN

##MyBox#
示例
一元函数

##MyBox#
示例 > 一元函数
绝对值
Math.abs(x)

##MyBox#
示例 > 一元函数
三角函数

##MyBox#
示例 > 一元函数 > 三角函数
角度转换为弧度
x * Math.PI / 180

##MyBox#
示例 > 一元函数 > 三角函数
弧度转换为角度
x * 180 / Math.PI

##MyBox#
示例 > 一元函数 > 三角函数
余弦-弧度
Math.cos(x)

##MyBox#
示例 > 一元函数 > 三角函数
正弦-弧度
Math.sin(x)

##MyBox#
示例 > 一元函数 > 三角函数
正切-弧度
Math.tan(x)
MyBoxTreeNodeMore:( x - Math.PI / 2 ) % Math.PI != 0

##MyBox#
示例 > 一元函数 > 三角函数
反余弦-弧度
Math.acos(x)
MyBoxTreeNodeMore:x >= -1 && x <= 1

##MyBox#
示例 > 一元函数 > 三角函数
反正弦-弧度
Math.asin(x)
MyBoxTreeNodeMore:x >= -1 && x <= 1

##MyBox#
示例 > 一元函数 > 三角函数
反正切-弧度
Math.atan(x)

##MyBox#
示例 > 一元函数 > 三角函数
余弦-角度
Math.cos(x * Math.PI / 180)

##MyBox#
示例 > 一元函数 > 三角函数
正弦-角度
Math.sin(x * Math.PI / 180)

##MyBox#
示例 > 一元函数 > 三角函数
正切-角度
Math.tan(x * Math.PI / 180)
MyBoxTreeNodeMore:( x - 90 ) % 180 != 0

##MyBox#
示例 > 一元函数 > 三角函数
反余弦-角度
Math.acos(x) * 180 / Math.PI
MyBoxTreeNodeMore:x >= -1 && x <= 1

##MyBox#
示例 > 一元函数 > 三角函数
反正弦-角度
Math.asin(x) * 180 / Math.PI
MyBoxTreeNodeMore:x >= -1 && x <= 1

##MyBox#
示例 > 一元函数 > 三角函数
反正切-角度
Math.atan(x) * 180 / Math.PI

##MyBox#
示例 > 一元函数 > 三角函数
圆的面积-半径
Math.PI * x * x

##MyBox#
示例 > 一元函数 > 三角函数
圆的面积-直径
var r = x / 2.0;
Math.PI * r * r

##MyBox#
示例 > 一元函数
幂函数

##MyBox#
示例 > 一元函数 > 幂函数
平方
Math.pow(x,2)

##MyBox#
示例 > 一元函数 > 幂函数
三次方
Math.pow(x,3)

##MyBox#
示例 > 一元函数 > 幂函数
四次方
Math.pow(x,4)

##MyBox#
示例 > 一元函数 > 幂函数
五次方
Math.pow(x,5)

##MyBox#
示例 > 一元函数 > 幂函数
平方根
Math.sqrt(x)
MyBoxTreeNodeMore:x >= 0

##MyBox#
示例 > 一元函数 > 幂函数
三次方根
Math.pow(x,1/3)
MyBoxTreeNodeMore:x >= 0

##MyBox#
示例 > 一元函数 > 幂函数
四次方根
Math.pow(x,1/4)
MyBoxTreeNodeMore:x >= 0

##MyBox#
示例 > 一元函数 > 幂函数
五次方根
Math.pow(x,1/5)
MyBoxTreeNodeMore:x >= 0

##MyBox#
示例 > 一元函数 > 幂函数
一次倒数
Math.pow(x,-1)
MyBoxTreeNodeMore:x != 0

##MyBox#
示例 > 一元函数 > 幂函数
二次倒数
Math.pow(x,-2)
MyBoxTreeNodeMore:x != 0

##MyBox#
示例 > 一元函数 > 幂函数
三次倒数
Math.pow(x,-3)
MyBoxTreeNodeMore:x != 0

##MyBox#
示例 > 一元函数
指数函数

##MyBox#
示例 > 一元函数 > 指数函数
欧拉指数
Math.exp(x + 5)

##MyBox#
示例 > 一元函数 > 指数函数
底数大于1的指数
Math.pow(5.9,x)

##MyBox#
示例 > 一元函数 > 指数函数
底数小于1的指数
Math.pow(0.7,x)

##MyBox#
示例 > 一元函数
对数函数

##MyBox#
示例 > 一元函数 > 对数函数
自然对数（底为e）
Math.log(x)
MyBoxTreeNodeMore:x > 0

##MyBox#
示例 > 一元函数
截取函数

##MyBox#
示例 > 一元函数 > 截取函数
上舍入
Math.ceil(x)

##MyBox#
示例 > 一元函数 > 截取函数
下舍入
Math.floor(x)

##MyBox#
示例 > 一元函数 > 截取函数
四舍五入
Math.round(x)

##MyBox#
示例 > 一元函数 > 截取函数
整数部分
Math.trunc(x)

##MyBox#
示例 > 一元函数
一元多项式

##MyBox#
示例 > 一元函数 > 一元多项式
一元线性函数
5 * x + 9

##MyBox#
示例 > 一元函数 > 一元多项式
一元二次函数
5 * Math.pow(x,2)  + 3 * x + 9

##MyBox#
示例 > 一元函数 > 一元多项式
一元三次函数
6 * Math.pow(x,3)  + 5 * Math.pow(x,2)  + 3 * x + 9

##MyBox#
示例 > 一元函数 > 一元多项式
一元四次函数
7 * Math.pow(x,4)  + 6 * Math.pow(x,3)  + 5 * Math.pow(x,2)  + 3 * x + 9

##MyBox#
示例 > 一元函数 > 一元多项式
一元五次函数
8 * Math.pow(x,5)  +7 * Math.pow(x,4)  + 6 * Math.pow(x,3)  + 5 * Math.pow(x,2)  + 3 * x + 9

##MyBox#
示例 > 一元函数
分段取值

##MyBox#
示例 > 一元函数 > 分段取值
直接取值
if ( x > 1 ) 
    6 * x - 5.9;
else if ( x == 1)
    38; 
else 
    Math.pow(x, 2) + 2.7; 

##MyBox#
示例 > 一元函数 > 分段取值
定义函数
function f1(x) {
    var multiply = 1;
    for (var i = 1; i <= Math.abs(x); i++) {
        multiply = multiply * i;
    }
    return multiply ;
}
function f2(x) {
    var sum = 0;
    for (var i = 1; i > x; i--) {
        sum += f1(i);
    }
    return sum;
}
if ( x > 1 ) 
    f1(x);
else if ( x == 1)
    38; 
else 
    f2(x);

##MyBox#
示例 > 一元函数
数值分析

##MyBox#
示例 > 一元函数 > 数值分析
一元正态分布概率密度函数
var mean = 1; 
var stdDeviation = 2; 
var dx = x - mean;
var expP = - dx * dx / ( 2 * stdDeviation * stdDeviation );
var div = Math.sqrt(2 * Math.PI) * stdDeviation;
Math.exp(expP) / div

##MyBox#
示例 > 一元函数 > 数值分析
一元标准正态分布概率密度函数
Math.exp(- x * x / 2) / Math.sqrt(2 * Math.PI)

##MyBox#
示例 > 一元函数 > 数值分析
sigmoid
1 / (1 + Math.exp(-x))

##MyBox#
示例 > 一元函数 > 数值分析
sigmoid的导数
var s = 1 / (1 + Math.exp(-x));
s * (1 - s);

##MyBox#
示例
二元函数

##MyBox#
示例 > 二元函数 > 三角函数
椭圆的面积-半轴
Math.PI * x * y

##MyBox#
示例 > 二元函数 > 三角函数
椭圆的面积-轴
Math.PI * x * y / 4

##MyBox#
示例 > 二元函数 > 数值分析
二元正态分布概率密度函数
var xMean = 1;
var xStd = 2; 
var yMean = 2;
var yStd = 1; 
var coefficient = 0.2; 
var dx = x - xMean;
var dy = y - yMean;
var xyStd = xStd * yStd;
var dco = 1 - coefficient * coefficient;
var px = dx * dx / ( xStd * xStd );
var py = dy * dy / ( yStd * yStd );
var pxy = 2 * coefficient * dx * dy / xyStd;
var expP = - (px + py - pxy) / ( 2 * dco)
var div = 2 * Math.PI * xyStd * Math.sqrt(dco);
Math.exp(expP) / div

##MyBox#
示例 > 二元函数 > 数值分析
二元标准正态分布概率密度函数
var xMean = 1;
var xStd = 2; 
var yMean = 2;
var yStd = 1; 
var dx = x - xMean;
var dy = y - yMean;
var xyStd = xStd * yStd;
var px = dx * dx / ( xStd * xStd );
var py = dy * dy / ( yStd * yStd );
var expP = - (px + py) / 2
var div = 2 * Math.PI * xyStd;
Math.exp(expP) / div


##MyBox#
示例
三元函数

##MyBox#
示例 > 三元函数 > 三角函数
正弦定理-求角（弧度）
// x1: 角A（弧度）
// x2: 边a
// x3: 边b
// 计算: 角B（弧度）
var sinB = sinA * x2 / x3;
Math.asin(sinB)

##MyBox#
示例 > 三元函数 > 三角函数
正弦定理-求角（角度）
// x1: 角A（角度）
// x2: 边a
// x3: 边b
// 计算: 角B（角度）
var sinA = Math.sin(x1 * Math.PI / 180);
var sinB = sinA * x2 / x3;
Math.asin( sinB ) * 180 / Math.PI

##MyBox#
示例 > 三元函数 > 三角函数
正弦定理-求边（弧度）
// x1: 角A（弧度）
// x2: 边a
// x3: 角B（弧度）
// 计算: 边b
x2 * Math.sin(x3) / Math.sin(x1)

##MyBox#
示例 > 三元函数 > 三角函数
正弦定理-求边（角度）
// x1: 角A（角度）
// x2: 边a
// x3: 角B（角度）
// 计算: 边b
var sinA = Math.sin(x1 * Math.PI / 180);
var sinB = Math.sin(x3 * Math.PI / 180);
x2 * sinB / sinA

##MyBox#
示例 > 三元函数 > 三角函数
余弦定理-求边（弧度）
// x1: 角A（弧度）
// x2: 边b
// x3: 边c
// 计算: 边a
Math.sqrt(x2 * x2 + x3 * x3 - 2 * x2 * x3 * Math.cos(x1))

##MyBox#
示例 > 三元函数 > 三角函数
余弦定理-求边（角度）
// x1: 角A（角度）
// x2: 边b
// x3: 边c
// 计算: 边a
var cosA = Math.cos(x1 * Math.PI / 180);
Math.sqrt(x2 * x2 + x3 * x3 - 2 * x2 * x3 * cosA)

##MyBox#
示例 > 三元函数 > 三角函数
余弦定理-求角（弧度）
// x1: 边a
// x2: 边b
// x3: 边c
// 计算: 角A（弧度）
var cosA = (x2 * x2 + x3 * x3 - x1 * x1) / (2 * x2 * x3);
Math.acos( cosA )

##MyBox#
示例 > 三元函数 > 三角函数
余弦定理-求角（角度）
// x1: 边a
// x2: 边b
// x3: 边c
// 计算: 角A（角度）
var cosA = (x2 * x2 + x3 * x3 - x1 * x1) / (2 * x2 * x3);
Math.acos( cosA ) * 180 / Math.PI

